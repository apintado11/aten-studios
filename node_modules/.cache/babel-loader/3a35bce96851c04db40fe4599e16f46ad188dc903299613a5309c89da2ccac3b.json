{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alexm\\\\IdeaProjects\\\\aten-studios\\\\frontend\\\\src\\\\hooks\\\\useTheme.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport function ThemeProvider({\n  children\n}) {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check localStorage for saved theme preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.body.classList.add('dark');\n    }\n  }, []);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => {\n      const newMode = !prev;\n      if (newMode) {\n        document.body.classList.add('dark');\n        localStorage.setItem('theme', 'dark');\n      } else {\n        document.body.classList.remove('dark');\n        localStorage.setItem('theme', 'light');\n      }\n      return newMode;\n    });\n  };\n  const value = {\n    isDarkMode,\n    toggleDarkMode\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(ThemeProvider, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = ThemeProvider;\nexport function useTheme() {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","document","body","classList","add","toggleDarkMode","prev","newMode","setItem","remove","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/alexm/IdeaProjects/aten-studios/frontend/src/hooks/useTheme.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport function ThemeProvider({ children }) {\r\n    const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        // Check localStorage for saved theme preference\r\n        const savedTheme = localStorage.getItem('theme');\r\n        if (savedTheme === 'dark') {\r\n            setIsDarkMode(true);\r\n            document.body.classList.add('dark');\r\n        }\r\n    }, []);\r\n\r\n    const toggleDarkMode = () => {\r\n        setIsDarkMode(prev => {\r\n            const newMode = !prev;\r\n\r\n            if (newMode) {\r\n                document.body.classList.add('dark');\r\n                localStorage.setItem('theme', 'dark');\r\n            } else {\r\n                document.body.classList.remove('dark');\r\n                localStorage.setItem('theme', 'light');\r\n            }\r\n\r\n            return newMode;\r\n        });\r\n    };\r\n\r\n    const value = {\r\n        isDarkMode,\r\n        toggleDarkMode\r\n    };\r\n\r\n    return (\r\n        <ThemeContext.Provider value={value}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\nexport function useTheme() {\r\n    const context = useContext(ThemeContext);\r\n    if (!context) {\r\n        throw new Error('useTheme must be used within a ThemeProvider');\r\n    }\r\n    return context;\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,SAASO,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,IAAIF,UAAU,KAAK,MAAM,EAAE;MACvBD,aAAa,CAAC,IAAI,CAAC;MACnBI,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IACvC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IACzBR,aAAa,CAACS,IAAI,IAAI;MAClB,MAAMC,OAAO,GAAG,CAACD,IAAI;MAErB,IAAIC,OAAO,EAAE;QACTN,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;QACnCL,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;MACzC,CAAC,MAAM;QACHP,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC;QACtCV,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;MAC1C;MAEA,OAAOD,OAAO;IAClB,CAAC,CAAC;EACN,CAAC;EAED,MAAMG,KAAK,GAAG;IACVd,UAAU;IACVS;EACJ,CAAC;EAED,oBACId,OAAA,CAACC,YAAY,CAACmB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhB,QAAA,EAC/BA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC;AAACpB,EAAA,CAtCeF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAwC7B,OAAO,SAASwB,QAAQA,CAAA,EAAG;EAAAC,GAAA;EACvB,MAAMC,OAAO,GAAGhC,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAAC2B,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACnE;EACA,OAAOD,OAAO;AAClB;AAACD,GAAA,CANeD,QAAQ;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}